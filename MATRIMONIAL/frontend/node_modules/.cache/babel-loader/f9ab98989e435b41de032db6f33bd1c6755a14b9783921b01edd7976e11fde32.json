{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tiyas\\\\OneDrive\\\\Desktop\\\\MATRIMONIAL\\\\MATRIMONIAL\\\\frontend\\\\src\\\\components\\\\Payment.js\",\n  _s = $RefreshSig$();\n// // src/Payment.js\n// import React, { useState } from \"react\";\n\n// const Payment = () => {\n//     const [amount, setAmount] = useState(\"\");\n\n//     const handlePayment = async () => {\n//         const response = await fetch(\"http://localhost:5000/api/payment/create-order\", {\n//             method: \"POST\",\n//             headers: {\n//                 \"Content-Type\": \"application/json\",\n//             },\n//             body: JSON.stringify({ amount: amount * 100 }), // Convert to smallest currency unit (paisa)\n//         });\n\n//         const orderData = await response.json();\n\n//         const options = {\n//             key: process.env.REACT_APP_RAZORPAY_KEY_ID, // Enter the Key ID generated from the Razorpay Dashboard\n//             amount: orderData.amount,\n//             currency: orderData.currency,\n//             name: \"Your Company Name\",\n//             description: \"Test Transaction\",\n//             order_id: orderData.id,\n//             handler: function (response) {\n//                 alert(`Payment successful: ${response.razorpay_payment_id}`);\n//                 console.log(response);\n//             },\n//             prefill: {\n//                 name: \"Bhavna Bairagi\",\n//                 email: \"bhavnabairagi12@gmail.com\",\n//                 contact: \"8839022132\",\n//             },\n//             theme: {\n//                 color: \"#3399cc\",\n//             },\n//         };\n\n//         const razorpay = new window.Razorpay(options);\n//         razorpay.open();\n//     };\n\n//     return (\n//         <div>\n//             <h2>Payment</h2>\n//             <input\n//                 type=\"number\"\n//                 placeholder=\"Enter Amount\"\n//                 value={amount}\n//                 onChange={(e) => setAmount(e.target.value)}\n//             />\n//             <button onClick={handlePayment}>Pay</button>\n//         </div>\n//     );\n// };\n\n// export default Payment;\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\"; // Import for navigation\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Payment = () => {\n  _s();\n  const [amount, setAmount] = useState(\"\");\n  const [userType, setUserType] = useState(\"\"); // Add state for user type\n  const navigate = useNavigate(); // Initialize the navigate function\n\n  const handlePayment = async () => {\n    const response = await fetch(\"http://localhost:5000/api/payment/create-order\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        amount: amount * 100\n      }) // Convert to smallest currency unit (paisa)\n    });\n    const orderData = await response.json();\n    const options = {\n      key: process.env.REACT_APP_RAZORPAY_KEY_ID,\n      // Enter the Key ID generated from the Razorpay Dashboard\n      amount: orderData.amount,\n      currency: orderData.currency,\n      name: \"Your Company Name\",\n      description: \"Test Transaction\",\n      order_id: orderData.id,\n      handler: function (response) {\n        alert(`Payment successful: ${response.razorpay_payment_id}`);\n        console.log(response);\n\n        // Navigate based on user type after successful payment\n        if (userType === \"admin\") {\n          navigate(\"/admin-profile\");\n        } else if (userType === \"user\") {\n          navigate(\"/user-profile\");\n        }\n      },\n      prefill: {\n        name: \"Bhavna Bairagi\",\n        email: \"bhavnabairagi12@gmail.com\",\n        contact: \"8839022132\"\n      },\n      theme: {\n        color: \"#3399cc\"\n      }\n    };\n    const razorpay = new window.Razorpay(options);\n    razorpay.open();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Payment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      placeholder: \"Enter Amount\",\n      value: amount,\n      onChange: e => setAmount(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"userType\",\n          value: \"admin\",\n          checked: userType === \"admin\",\n          onChange: e => setUserType(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this), \"Admin\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"userType\",\n          value: \"user\",\n          checked: userType === \"user\",\n          onChange: e => setUserType(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), \"User\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePayment,\n      children: \"Pay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 9\n  }, this);\n};\n_s(Payment, \"aIriHLSZvJdqM/u4005dMhFQNgE=\", false, function () {\n  return [useNavigate];\n});\n_c = Payment;\nexport default Payment;\nvar _c;\n$RefreshReg$(_c, \"Payment\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Payment","_s","amount","setAmount","userType","setUserType","navigate","handlePayment","response","fetch","method","headers","body","JSON","stringify","orderData","json","options","key","process","env","REACT_APP_RAZORPAY_KEY_ID","currency","name","description","order_id","id","handler","alert","razorpay_payment_id","console","log","prefill","email","contact","theme","color","razorpay","window","Razorpay","open","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","checked","onClick","_c","$RefreshReg$"],"sources":["C:/Users/tiyas/OneDrive/Desktop/MATRIMONIAL/MATRIMONIAL/frontend/src/components/Payment.js"],"sourcesContent":["// // src/Payment.js\r\n// import React, { useState } from \"react\";\r\n\r\n// const Payment = () => {\r\n//     const [amount, setAmount] = useState(\"\");\r\n\r\n//     const handlePayment = async () => {\r\n//         const response = await fetch(\"http://localhost:5000/api/payment/create-order\", {\r\n//             method: \"POST\",\r\n//             headers: {\r\n//                 \"Content-Type\": \"application/json\",\r\n//             },\r\n//             body: JSON.stringify({ amount: amount * 100 }), // Convert to smallest currency unit (paisa)\r\n//         });\r\n\r\n//         const orderData = await response.json();\r\n\r\n//         const options = {\r\n//             key: process.env.REACT_APP_RAZORPAY_KEY_ID, // Enter the Key ID generated from the Razorpay Dashboard\r\n//             amount: orderData.amount,\r\n//             currency: orderData.currency,\r\n//             name: \"Your Company Name\",\r\n//             description: \"Test Transaction\",\r\n//             order_id: orderData.id,\r\n//             handler: function (response) {\r\n//                 alert(`Payment successful: ${response.razorpay_payment_id}`);\r\n//                 console.log(response);\r\n//             },\r\n//             prefill: {\r\n//                 name: \"Bhavna Bairagi\",\r\n//                 email: \"bhavnabairagi12@gmail.com\",\r\n//                 contact: \"8839022132\",\r\n//             },\r\n//             theme: {\r\n//                 color: \"#3399cc\",\r\n//             },\r\n//         };\r\n\r\n//         const razorpay = new window.Razorpay(options);\r\n//         razorpay.open();\r\n//     };\r\n\r\n//     return (\r\n//         <div>\r\n//             <h2>Payment</h2>\r\n//             <input\r\n//                 type=\"number\"\r\n//                 placeholder=\"Enter Amount\"\r\n//                 value={amount}\r\n//                 onChange={(e) => setAmount(e.target.value)}\r\n//             />\r\n//             <button onClick={handlePayment}>Pay</button>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default Payment;\r\n\r\nimport React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\"; // Import for navigation\r\n\r\nconst Payment = () => {\r\n    const [amount, setAmount] = useState(\"\");\r\n    const [userType, setUserType] = useState(\"\"); // Add state for user type\r\n    const navigate = useNavigate(); // Initialize the navigate function\r\n\r\n    const handlePayment = async () => {\r\n        const response = await fetch(\"http://localhost:5000/api/payment/create-order\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({ amount: amount * 100 }), // Convert to smallest currency unit (paisa)\r\n        });\r\n\r\n        const orderData = await response.json();\r\n\r\n        const options = {\r\n            key: process.env.REACT_APP_RAZORPAY_KEY_ID, // Enter the Key ID generated from the Razorpay Dashboard\r\n            amount: orderData.amount,\r\n            currency: orderData.currency,\r\n            name: \"Your Company Name\",\r\n            description: \"Test Transaction\",\r\n            order_id: orderData.id,\r\n            handler: function (response) {\r\n                alert(`Payment successful: ${response.razorpay_payment_id}`);\r\n                console.log(response);\r\n                \r\n                // Navigate based on user type after successful payment\r\n                if (userType === \"admin\") {\r\n                    navigate(\"/admin-profile\");\r\n                } else if (userType === \"user\") {\r\n                    navigate(\"/user-profile\");\r\n                }\r\n            },\r\n            prefill: {\r\n                name: \"Bhavna Bairagi\",\r\n                email: \"bhavnabairagi12@gmail.com\",\r\n                contact: \"8839022132\",\r\n            },\r\n            theme: {\r\n                color: \"#3399cc\",\r\n            },\r\n        };\r\n\r\n        const razorpay = new window.Razorpay(options);\r\n        razorpay.open();\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Payment</h2>\r\n            <input\r\n                type=\"number\"\r\n                placeholder=\"Enter Amount\"\r\n                value={amount}\r\n                onChange={(e) => setAmount(e.target.value)}\r\n            />\r\n            \r\n            {/* Add user type selection */}\r\n            <div>\r\n                <label>\r\n                    <input\r\n                        type=\"radio\"\r\n                        name=\"userType\"\r\n                        value=\"admin\"\r\n                        checked={userType === \"admin\"}\r\n                        onChange={(e) => setUserType(e.target.value)}\r\n                    />\r\n                    Admin\r\n                </label>\r\n                <label>\r\n                    <input\r\n                        type=\"radio\"\r\n                        name=\"userType\"\r\n                        value=\"user\"\r\n                        checked={userType === \"user\"}\r\n                        onChange={(e) => setUserType(e.target.value)}\r\n                    />\r\n                    User\r\n                </label>\r\n            </div>\r\n            \r\n            <button onClick={handlePayment}>Pay</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Payment;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}