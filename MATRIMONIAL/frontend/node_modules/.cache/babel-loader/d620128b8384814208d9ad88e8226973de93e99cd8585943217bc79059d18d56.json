{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tiyas\\\\OneDrive\\\\Desktop\\\\MATRIMONIAL\\\\MATRIMONIAL\\\\frontend\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\n// // import React, { useState } from \"react\";\n// // import { Link, useNavigate } from \"react-router-dom\";\n// // import axios from \"axios\";\n// // import \"../styles/Login.css\";\n\n// // function Login() {\n// //   const [email, setEmail] = useState(\"\");\n// //   const [password, setPassword] = useState(\"\");\n// //   const [userType, setUserType] = useState(\"user\"); // Default type is 'user'\n// //   const [error, setError] = useState(\"\");\n// //   const [loading, setLoading] = useState(false);\n// //   const navigate = useNavigate();\n\n// //   const handleSubmit = async (e) => {\n// //     e.preventDefault();\n// //     setError(\"\");\n// //     setLoading(true);\n\n// //     try {\n// //       const response = await axios.post(\"http://localhost:5000/api/auth/login\", {\n// //         email,\n// //         password,\n// //         type: userType,\n// //       });\n\n// //       localStorage.setItem(\"token\", response.data.token);\n// //       localStorage.setItem(\"user\", JSON.stringify(response.data.user));\n\n// //       // Redirect based on user type\n// //       if (response.data.userType === \"admin\") {\n// //         navigate(\"/admin/profile\");\n// //       } else {\n// //         navigate(\"/profile\");\n// //       }\n// //     } catch (err) {\n// //       setError(err.response?.data?.message || \"Login failed. Please try again.\");\n// //     } finally {\n// //       setLoading(false);\n// //     }\n// //   };\n\n// //   return (\n// //     <div className=\"auth-container\">\n// //       <div className=\"auth-card\">\n// //         <div className=\"auth-header\">\n// //           <h2>Login to Your Account</h2>\n// //           <p>Find your perfect match with us!</p>\n// //         </div>\n\n// //         <form onSubmit={handleSubmit}>\n// //           {error && <div className=\"error-message\">{error}</div>}\n\n// //           <div className=\"form-group\">\n// //             <label htmlFor=\"email\">Email</label>\n// //             <input\n// //               type=\"email\"\n// //               id=\"email\"\n// //               placeholder=\"Enter your email\"\n// //               value={email}\n// //               onChange={(e) => setEmail(e.target.value)}\n// //               required\n// //             />\n// //           </div>\n\n// //           <div className=\"form-group\">\n// //             <label htmlFor=\"password\">Password</label>\n// //             <input\n// //               type=\"password\"\n// //               id=\"password\"\n// //               placeholder=\"Enter your password\"\n// //               value={password}\n// //               onChange={(e) => setPassword(e.target.value)}\n// //               required\n// //             />\n// //           </div>\n\n// //           <div className=\"form-group\">\n// //             <label htmlFor=\"userType\">Login as</label>\n// //             <select\n// //               id=\"userType\"\n// //               value={userType}\n// //               onChange={(e) => setUserType(e.target.value)}\n// //             >\n// //               <option value=\"user\">User</option>\n// //               <option value=\"admin\">Admin</option>\n// //             </select>\n// //           </div>\n\n// //           <button type=\"submit\" className=\"submit-btn\" disabled={loading}>\n// //             {loading ? \"Logging in...\" : \"Login\"}\n// //           </button>\n// //         </form>\n\n// //         <div className=\"auth-footer\">\n// //           <p>\n// //             Don't have an account? <Link to=\"/register\">Register Now</Link>\n// //           </p>\n// //         </div>\n// //       </div>\n// //     </div>\n// //   );\n// // }\n\n// // export default Login;\n\n// import React, { useState } from \"react\";\n// import { Link, useNavigate } from \"react-router-dom\";\n// import axios from \"axios\";\n// import \"../styles/Login.css\";\n\n// function Login() {\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [userType, setUserType] = useState(\"user\"); // Default type is 'user'\n//   const [error, setError] = useState(\"\");\n//   const [loading, setLoading] = useState(false);\n//   const navigate = useNavigate();\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setError(\"\");\n//     setLoading(true);\n\n//     try {\n//       const response = await axios.post(\"http://localhost:5000/api/auth/login\", {\n//         email,\n//         password,\n//         type: userType,\n//       });\n\n//       localStorage.setItem(\"token\", response.data.token);\n//       localStorage.setItem(\"user\", JSON.stringify(response.data.user));\n\n//       // Redirect based on user type\n//       // Check if the user type is in the user object or directly in the response\n//       const loggedInUserType = response.data.user?.type || response.data.user?.userType || response.data.userType || userType;\n\n//       if (loggedInUserType === \"admin\") {\n//         navigate(\"/admin/profile\");\n//       } else {\n//         navigate(\"/profile\");\n//       }\n//     } catch (err) {\n//       setError(err.response?.data?.message || \"Login failed. Please try again.\");\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"auth-container\">\n//       <div className=\"auth-card\">\n//         <div className=\"auth-header\">\n//           <h2>Login to Your Account</h2>\n//           <p>Find your perfect match with us!</p>\n//         </div>\n\n//         <form onSubmit={handleSubmit}>\n//           {error && <div className=\"error-message\">{error}</div>}\n\n//           <div className=\"form-group\">\n//             <label htmlFor=\"email\">Email</label>\n//             <input\n//               type=\"email\"\n//               id=\"email\"\n//               placeholder=\"Enter your email\"\n//               value={email}\n//               onChange={(e) => setEmail(e.target.value)}\n//               required\n//             />\n//           </div>\n\n//           <div className=\"form-group\">\n//             <label htmlFor=\"password\">Password</label>\n//             <input\n//               type=\"password\"\n//               id=\"password\"\n//               placeholder=\"Enter your password\"\n//               value={password}\n//               onChange={(e) => setPassword(e.target.value)}\n//               required\n//             />\n//           </div>\n\n//           <div className=\"form-group\">\n//             <label htmlFor=\"userType\">Login as</label>\n//             <select\n//               id=\"userType\"\n//               value={userType}\n//               onChange={(e) => setUserType(e.target.value)}\n//             >\n//               <option value=\"user\">User</option>\n//               <option value=\"admin\">Admin</option>\n//             </select>\n//           </div>\n\n//           <button type=\"submit\" className=\"submit-btn\" disabled={loading}>\n//             {loading ? \"Logging in...\" : \"Login\"}\n//           </button>\n//         </form>\n\n//         <div className=\"auth-footer\">\n//           <p>\n//             Don't have an account? <Link to=\"/register\">Register Now</Link>\n//           </p>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default Login;\n\n// FRONTEND - Updated Login Component\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useNavigate, useLocation } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"../styles/Login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [userType, setUserType] = useState(\"user\");\n  const [error, setError] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [showResendVerification, setShowResendVerification] = useState(false);\n  const navigate = useNavigate();\n  const location = useLocation();\n  useEffect(() => {\n    // Check for verification success message in URL params\n    const queryParams = new URLSearchParams(location.search);\n    const verificationStatus = queryParams.get(\"verified\");\n    const verificationMessage = queryParams.get(\"message\");\n    if (verificationStatus === \"success\") {\n      setMessage(verificationMessage || \"Email verified successfully! You can now log in.\");\n    } else if (verificationStatus === \"error\") {\n      setError(verificationMessage || \"Verification failed. Please try again.\");\n    }\n  }, [location]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError(\"\");\n    setMessage(\"\");\n    setLoading(true);\n    try {\n      var _response$data$user, _response$data$user2;\n      const response = await axios.post(\"http://localhost:5000/api/auth/login\", {\n        email,\n        password,\n        type: userType\n      });\n      localStorage.setItem(\"token\", response.data.token);\n      localStorage.setItem(\"user\", JSON.stringify(response.data.user));\n      const loggedInUserType = ((_response$data$user = response.data.user) === null || _response$data$user === void 0 ? void 0 : _response$data$user.type) || ((_response$data$user2 = response.data.user) === null || _response$data$user2 === void 0 ? void 0 : _response$data$user2.userType) || response.data.userType || userType;\n      if (loggedInUserType === \"admin\") {\n        navigate(\"/admin/profile\");\n      } else {\n        navigate(\"/profile\");\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      const errorMessage = ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || \"Login failed. Please try again.\";\n      setError(errorMessage);\n\n      // Check if the error is due to unverified email\n      if (errorMessage.includes(\"verify\") || errorMessage.includes(\"verification\")) {\n        setShowResendVerification(true);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleResendVerification = async () => {\n    setLoading(true);\n    setError(\"\");\n    setMessage(\"\");\n    try {\n      await axios.post(\"http://localhost:5000/api/auth/resend-verification\", {\n        email\n      });\n      setMessage(\"Verification email sent. Please check your inbox.\");\n      setShowResendVerification(false);\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || \"Failed to resend verification email.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Login to Your Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Find your perfect match with us!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success-message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            placeholder: \"Enter your email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            placeholder: \"Enter your password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"userType\",\n            children: \"Login as\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"userType\",\n            value: userType,\n            onChange: e => setUserType(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"user\",\n              children: \"User\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"admin\",\n              children: \"Admin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit-btn\",\n          disabled: loading,\n          children: loading ? \"Logging in...\" : \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 11\n        }, this), showResendVerification && /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"resend-btn\",\n          onClick: handleResendVerification,\n          disabled: loading,\n          children: \"Resend Verification Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-footer\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/register\",\n            children: \"Register Now\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 36\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 299,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"rTfH/VD2DgfHyK1rhuCiG7uLOh0=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","useLocation","axios","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","userType","setUserType","error","setError","message","setMessage","loading","setLoading","showResendVerification","setShowResendVerification","navigate","location","queryParams","URLSearchParams","search","verificationStatus","get","verificationMessage","handleSubmit","e","preventDefault","_response$data$user","_response$data$user2","response","post","type","localStorage","setItem","data","token","JSON","stringify","user","loggedInUserType","err","_err$response","_err$response$data","errorMessage","includes","handleResendVerification","_err$response2","_err$response2$data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","placeholder","value","onChange","target","required","disabled","onClick","to","_c","$RefreshReg$"],"sources":["C:/Users/tiyas/OneDrive/Desktop/MATRIMONIAL/MATRIMONIAL/frontend/src/components/Login.js"],"sourcesContent":["// // import React, { useState } from \"react\";\r\n// // import { Link, useNavigate } from \"react-router-dom\";\r\n// // import axios from \"axios\";\r\n// // import \"../styles/Login.css\";\r\n\r\n// // function Login() {\r\n// //   const [email, setEmail] = useState(\"\");\r\n// //   const [password, setPassword] = useState(\"\");\r\n// //   const [userType, setUserType] = useState(\"user\"); // Default type is 'user'\r\n// //   const [error, setError] = useState(\"\");\r\n// //   const [loading, setLoading] = useState(false);\r\n// //   const navigate = useNavigate();\r\n\r\n// //   const handleSubmit = async (e) => {\r\n// //     e.preventDefault();\r\n// //     setError(\"\");\r\n// //     setLoading(true);\r\n    \r\n// //     try {\r\n// //       const response = await axios.post(\"http://localhost:5000/api/auth/login\", {\r\n// //         email,\r\n// //         password,\r\n// //         type: userType,\r\n// //       });\r\n      \r\n// //       localStorage.setItem(\"token\", response.data.token);\r\n// //       localStorage.setItem(\"user\", JSON.stringify(response.data.user));\r\n      \r\n// //       // Redirect based on user type\r\n// //       if (response.data.userType === \"admin\") {\r\n// //         navigate(\"/admin/profile\");\r\n// //       } else {\r\n// //         navigate(\"/profile\");\r\n// //       }\r\n// //     } catch (err) {\r\n// //       setError(err.response?.data?.message || \"Login failed. Please try again.\");\r\n// //     } finally {\r\n// //       setLoading(false);\r\n// //     }\r\n// //   };\r\n\r\n// //   return (\r\n// //     <div className=\"auth-container\">\r\n// //       <div className=\"auth-card\">\r\n// //         <div className=\"auth-header\">\r\n// //           <h2>Login to Your Account</h2>\r\n// //           <p>Find your perfect match with us!</p>\r\n// //         </div>\r\n        \r\n// //         <form onSubmit={handleSubmit}>\r\n// //           {error && <div className=\"error-message\">{error}</div>}\r\n          \r\n// //           <div className=\"form-group\">\r\n// //             <label htmlFor=\"email\">Email</label>\r\n// //             <input\r\n// //               type=\"email\"\r\n// //               id=\"email\"\r\n// //               placeholder=\"Enter your email\"\r\n// //               value={email}\r\n// //               onChange={(e) => setEmail(e.target.value)}\r\n// //               required\r\n// //             />\r\n// //           </div>\r\n          \r\n// //           <div className=\"form-group\">\r\n// //             <label htmlFor=\"password\">Password</label>\r\n// //             <input\r\n// //               type=\"password\"\r\n// //               id=\"password\"\r\n// //               placeholder=\"Enter your password\"\r\n// //               value={password}\r\n// //               onChange={(e) => setPassword(e.target.value)}\r\n// //               required\r\n// //             />\r\n// //           </div>\r\n          \r\n// //           <div className=\"form-group\">\r\n// //             <label htmlFor=\"userType\">Login as</label>\r\n// //             <select\r\n// //               id=\"userType\"\r\n// //               value={userType}\r\n// //               onChange={(e) => setUserType(e.target.value)}\r\n// //             >\r\n// //               <option value=\"user\">User</option>\r\n// //               <option value=\"admin\">Admin</option>\r\n// //             </select>\r\n// //           </div>\r\n          \r\n// //           <button type=\"submit\" className=\"submit-btn\" disabled={loading}>\r\n// //             {loading ? \"Logging in...\" : \"Login\"}\r\n// //           </button>\r\n// //         </form>\r\n        \r\n// //         <div className=\"auth-footer\">\r\n// //           <p>\r\n// //             Don't have an account? <Link to=\"/register\">Register Now</Link>\r\n// //           </p>\r\n// //         </div>\r\n// //       </div>\r\n// //     </div>\r\n// //   );\r\n// // }\r\n\r\n// // export default Login;\r\n\r\n// import React, { useState } from \"react\";\r\n// import { Link, useNavigate } from \"react-router-dom\";\r\n// import axios from \"axios\";\r\n// import \"../styles/Login.css\";\r\n\r\n// function Login() {\r\n//   const [email, setEmail] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [userType, setUserType] = useState(\"user\"); // Default type is 'user'\r\n//   const [error, setError] = useState(\"\");\r\n//   const [loading, setLoading] = useState(false);\r\n//   const navigate = useNavigate();\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     setError(\"\");\r\n//     setLoading(true);\r\n    \r\n//     try {\r\n//       const response = await axios.post(\"http://localhost:5000/api/auth/login\", {\r\n//         email,\r\n//         password,\r\n//         type: userType,\r\n//       });\r\n      \r\n//       localStorage.setItem(\"token\", response.data.token);\r\n//       localStorage.setItem(\"user\", JSON.stringify(response.data.user));\r\n      \r\n//       // Redirect based on user type\r\n//       // Check if the user type is in the user object or directly in the response\r\n//       const loggedInUserType = response.data.user?.type || response.data.user?.userType || response.data.userType || userType;\r\n      \r\n//       if (loggedInUserType === \"admin\") {\r\n//         navigate(\"/admin/profile\");\r\n//       } else {\r\n//         navigate(\"/profile\");\r\n//       }\r\n//     } catch (err) {\r\n//       setError(err.response?.data?.message || \"Login failed. Please try again.\");\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"auth-container\">\r\n//       <div className=\"auth-card\">\r\n//         <div className=\"auth-header\">\r\n//           <h2>Login to Your Account</h2>\r\n//           <p>Find your perfect match with us!</p>\r\n//         </div>\r\n        \r\n//         <form onSubmit={handleSubmit}>\r\n//           {error && <div className=\"error-message\">{error}</div>}\r\n          \r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"email\">Email</label>\r\n//             <input\r\n//               type=\"email\"\r\n//               id=\"email\"\r\n//               placeholder=\"Enter your email\"\r\n//               value={email}\r\n//               onChange={(e) => setEmail(e.target.value)}\r\n//               required\r\n//             />\r\n//           </div>\r\n          \r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"password\">Password</label>\r\n//             <input\r\n//               type=\"password\"\r\n//               id=\"password\"\r\n//               placeholder=\"Enter your password\"\r\n//               value={password}\r\n//               onChange={(e) => setPassword(e.target.value)}\r\n//               required\r\n//             />\r\n//           </div>\r\n          \r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"userType\">Login as</label>\r\n//             <select\r\n//               id=\"userType\"\r\n//               value={userType}\r\n//               onChange={(e) => setUserType(e.target.value)}\r\n//             >\r\n//               <option value=\"user\">User</option>\r\n//               <option value=\"admin\">Admin</option>\r\n//             </select>\r\n//           </div>\r\n          \r\n//           <button type=\"submit\" className=\"submit-btn\" disabled={loading}>\r\n//             {loading ? \"Logging in...\" : \"Login\"}\r\n//           </button>\r\n//         </form>\r\n        \r\n//         <div className=\"auth-footer\">\r\n//           <p>\r\n//             Don't have an account? <Link to=\"/register\">Register Now</Link>\r\n//           </p>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Login;\r\n\r\n\r\n\r\n// FRONTEND - Updated Login Component\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link, useNavigate, useLocation } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport \"../styles/Login.css\";\r\n\r\nfunction Login() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [userType, setUserType] = useState(\"user\");\r\n  const [error, setError] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [showResendVerification, setShowResendVerification] = useState(false);\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    // Check for verification success message in URL params\r\n    const queryParams = new URLSearchParams(location.search);\r\n    const verificationStatus = queryParams.get(\"verified\");\r\n    const verificationMessage = queryParams.get(\"message\");\r\n    \r\n    if (verificationStatus === \"success\") {\r\n      setMessage(verificationMessage || \"Email verified successfully! You can now log in.\");\r\n    } else if (verificationStatus === \"error\") {\r\n      setError(verificationMessage || \"Verification failed. Please try again.\");\r\n    }\r\n  }, [location]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError(\"\");\r\n    setMessage(\"\");\r\n    setLoading(true);\r\n    \r\n    try {\r\n      const response = await axios.post(\"http://localhost:5000/api/auth/login\", {\r\n        email,\r\n        password,\r\n        type: userType,\r\n      });\r\n      \r\n      localStorage.setItem(\"token\", response.data.token);\r\n      localStorage.setItem(\"user\", JSON.stringify(response.data.user));\r\n      \r\n      const loggedInUserType = response.data.user?.type || response.data.user?.userType || response.data.userType || userType;\r\n      \r\n      if (loggedInUserType === \"admin\") {\r\n        navigate(\"/admin/profile\");\r\n      } else {\r\n        navigate(\"/profile\");\r\n      }\r\n    } catch (err) {\r\n      const errorMessage = err.response?.data?.message || \"Login failed. Please try again.\";\r\n      setError(errorMessage);\r\n      \r\n      // Check if the error is due to unverified email\r\n      if (errorMessage.includes(\"verify\") || errorMessage.includes(\"verification\")) {\r\n        setShowResendVerification(true);\r\n      }\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleResendVerification = async () => {\r\n    setLoading(true);\r\n    setError(\"\");\r\n    setMessage(\"\");\r\n    \r\n    try {\r\n      await axios.post(\"http://localhost:5000/api/auth/resend-verification\", { email });\r\n      setMessage(\"Verification email sent. Please check your inbox.\");\r\n      setShowResendVerification(false);\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || \"Failed to resend verification email.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-container\">\r\n      <div className=\"auth-card\">\r\n        <div className=\"auth-header\">\r\n          <h2>Login to Your Account</h2>\r\n          <p>Find your perfect match with us!</p>\r\n        </div>\r\n        \r\n        {message && <div className=\"success-message\">{message}</div>}\r\n        \r\n        <form onSubmit={handleSubmit}>\r\n          {error && <div className=\"error-message\">{error}</div>}\r\n          \r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              placeholder=\"Enter your email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              placeholder=\"Enter your password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"userType\">Login as</label>\r\n            <select\r\n              id=\"userType\"\r\n              value={userType}\r\n              onChange={(e) => setUserType(e.target.value)}\r\n            >\r\n              <option value=\"user\">User</option>\r\n              <option value=\"admin\">Admin</option>\r\n            </select>\r\n          </div>\r\n          \r\n          <button type=\"submit\" className=\"submit-btn\" disabled={loading}>\r\n            {loading ? \"Logging in...\" : \"Login\"}\r\n          </button>\r\n          \r\n          {showResendVerification && (\r\n            <button \r\n              type=\"button\" \r\n              className=\"resend-btn\" \r\n              onClick={handleResendVerification}\r\n              disabled={loading}\r\n            >\r\n              Resend Verification Email\r\n            </button>\r\n          )}\r\n        </form>\r\n        \r\n        <div className=\"auth-footer\">\r\n          <p>\r\n            Don't have an account? <Link to=\"/register\">Register Now</Link>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AACjE,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,KAAK,EAAEC,QAAQ,CA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}