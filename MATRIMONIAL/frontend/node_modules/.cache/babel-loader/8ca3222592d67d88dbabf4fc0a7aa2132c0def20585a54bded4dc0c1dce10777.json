{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tiyas\\\\OneDrive\\\\Desktop\\\\MATRIMONIAL\\\\MATRIMONIAL\\\\frontend\\\\src\\\\components\\\\PayPalButton.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { PayPalScriptProvider, PayPalButtons } from \"@paypal/react-paypal-js\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PayPalButton = ({\n  price,\n  recipeTitle,\n  recipeId\n}) => {\n  _s();\n  const [clientId, setClientId] = useState(\"\");\n  useEffect(() => {\n    // Fetch the PayPal Client ID from the backend (Optional)\n    setClientId(\"YOUR_PAYPAL_CLIENT_ID\");\n  }, []);\n  const handleApprove = orderID => {\n    console.log(\"Payment Approved!\", orderID);\n  };\n  return /*#__PURE__*/_jsxDEV(PayPalScriptProvider, {\n    options: {\n      \"client-id\": clientId\n    },\n    children: /*#__PURE__*/_jsxDEV(PayPalButtons, {\n      style: {\n        layout: \"vertical\"\n      },\n      createOrder: async () => {\n        try {\n          const {\n            data\n          } = await axios.post(`http://localhost:5000/pay/${recipeId}`, {\n            price: price,\n            recipe_title: recipeTitle\n          });\n          return data.orderID;\n        } catch (error) {\n          console.error(\"Error creating order\", error);\n        }\n      },\n      onApprove: async data => {\n        handleApprove(data.orderID);\n      },\n      onError: err => {\n        console.error(\"Payment Error\", err);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n_s(PayPalButton, \"IUSCpu5Olw6iL2ha+7veqg1uwTU=\");\n_c = PayPalButton;\nexport default PayPalButton;\nvar _c;\n$RefreshReg$(_c, \"PayPalButton\");","map":{"version":3,"names":["React","useEffect","useState","PayPalScriptProvider","PayPalButtons","axios","jsxDEV","_jsxDEV","PayPalButton","price","recipeTitle","recipeId","_s","clientId","setClientId","handleApprove","orderID","console","log","options","children","style","layout","createOrder","data","post","recipe_title","error","onApprove","onError","err","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/tiyas/OneDrive/Desktop/MATRIMONIAL/MATRIMONIAL/frontend/src/components/PayPalButton.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { PayPalScriptProvider, PayPalButtons } from \"@paypal/react-paypal-js\";\r\nimport axios from \"axios\";\r\n\r\nconst PayPalButton = ({ price, recipeTitle, recipeId }) => {\r\n    const [clientId, setClientId] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        // Fetch the PayPal Client ID from the backend (Optional)\r\n        setClientId(\"YOUR_PAYPAL_CLIENT_ID\");\r\n    }, []);\r\n\r\n    const handleApprove = (orderID) => {\r\n        console.log(\"Payment Approved!\", orderID);\r\n    };\r\n\r\n    return (\r\n        <PayPalScriptProvider options={{ \"client-id\": clientId }}>\r\n            <PayPalButtons\r\n                style={{ layout: \"vertical\" }}\r\n                createOrder={async () => {\r\n                    try {\r\n                        const { data } = await axios.post(`http://localhost:5000/pay/${recipeId}`, {\r\n                            price: price,\r\n                            recipe_title: recipeTitle,\r\n                        });\r\n                        return data.orderID;\r\n                    } catch (error) {\r\n                        console.error(\"Error creating order\", error);\r\n                    }\r\n                }}\r\n                onApprove={async (data) => {\r\n                    handleApprove(data.orderID);\r\n                }}\r\n                onError={(err) => {\r\n                    console.error(\"Payment Error\", err);\r\n                }}\r\n            />\r\n        </PayPalScriptProvider>\r\n    );\r\n};\r\n\r\nexport default PayPalButton;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,oBAAoB,EAAEC,aAAa,QAAQ,yBAAyB;AAC7E,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,YAAY,GAAGA,CAAC;EAAEC,KAAK;EAAEC,WAAW;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACvD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACZ;IACAa,WAAW,CAAC,uBAAuB,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,aAAa,GAAIC,OAAO,IAAK;IAC/BC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEF,OAAO,CAAC;EAC7C,CAAC;EAED,oBACIT,OAAA,CAACJ,oBAAoB;IAACgB,OAAO,EAAE;MAAE,WAAW,EAAEN;IAAS,CAAE;IAAAO,QAAA,eACrDb,OAAA,CAACH,aAAa;MACViB,KAAK,EAAE;QAAEC,MAAM,EAAE;MAAW,CAAE;MAC9BC,WAAW,EAAE,MAAAA,CAAA,KAAY;QACrB,IAAI;UACA,MAAM;YAAEC;UAAK,CAAC,GAAG,MAAMnB,KAAK,CAACoB,IAAI,CAAC,6BAA6Bd,QAAQ,EAAE,EAAE;YACvEF,KAAK,EAAEA,KAAK;YACZiB,YAAY,EAAEhB;UAClB,CAAC,CAAC;UACF,OAAOc,IAAI,CAACR,OAAO;QACvB,CAAC,CAAC,OAAOW,KAAK,EAAE;UACZV,OAAO,CAACU,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAChD;MACJ,CAAE;MACFC,SAAS,EAAE,MAAOJ,IAAI,IAAK;QACvBT,aAAa,CAACS,IAAI,CAACR,OAAO,CAAC;MAC/B,CAAE;MACFa,OAAO,EAAGC,GAAG,IAAK;QACdb,OAAO,CAACU,KAAK,CAAC,eAAe,EAAEG,GAAG,CAAC;MACvC;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACgB,CAAC;AAE/B,CAAC;AAACtB,EAAA,CApCIJ,YAAY;AAAA2B,EAAA,GAAZ3B,YAAY;AAsClB,eAAeA,YAAY;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}