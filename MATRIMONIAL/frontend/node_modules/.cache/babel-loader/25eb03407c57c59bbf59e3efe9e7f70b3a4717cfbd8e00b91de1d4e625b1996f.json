{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tiyas\\\\OneDrive\\\\Desktop\\\\MATRIMONIAL\\\\MATRIMONIAL\\\\frontend\\\\src\\\\components\\\\PayPalButton.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { PayPalScriptProvider, PayPalButtons } from \"@paypal/react-paypal-js\";\nimport axios from \"axios\";\nimport \"./paypalButton.css\"; // Make sure to create this CSS file with the styles above\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PayPalButton = ({\n  price,\n  recipeTitle,\n  recipeId\n}) => {\n  _s();\n  const [clientId, setClientId] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [status, setStatus] = useState(null);\n  const [statusMessage, setStatusMessage] = useState(\"\");\n  useEffect(() => {\n    // Fetch the PayPal Client ID from the backend (Optional)\n    setClientId(\"YOUR_PAYPAL_CLIENT_ID\");\n  }, []);\n  const handleApprove = orderID => {\n    setStatus(\"success\");\n    setStatusMessage(\"Payment successful! Order ID: \" + orderID);\n    console.log(\"Payment Approved!\", orderID);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"paypal-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"payment-title\",\n      children: \"Secure Checkout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recipe-title\",\n      children: recipeTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"price-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"price-label\",\n        children: \"Total:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"price-amount\",\n        children: [\"$\", price.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"paypal-buttons-wrapper\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"processing\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"loading-spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this), \"Processing your payment...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(PayPalScriptProvider, {\n        options: {\n          \"client-id\": clientId\n        },\n        children: /*#__PURE__*/_jsxDEV(PayPalButtons, {\n          style: {\n            layout: \"vertical\",\n            color: \"blue\",\n            shape: \"rect\",\n            label: \"pay\"\n          },\n          createOrder: async () => {\n            try {\n              setLoading(true);\n              const {\n                data\n              } = await axios.post(`http://localhost:5000/pay/${recipeId}`, {\n                price: price,\n                recipe_title: recipeTitle\n              });\n              setLoading(false);\n              return data.orderID;\n            } catch (error) {\n              setLoading(false);\n              setStatus(\"error\");\n              setStatusMessage(\"Error creating order. Please try again.\");\n              console.error(\"Error creating order\", error);\n            }\n          },\n          onApprove: async data => {\n            setLoading(true);\n            try {\n              handleApprove(data.orderID);\n            } catch (error) {\n              setStatus(\"error\");\n              setStatusMessage(\"Error processing payment. Please contact support.\");\n              console.error(\"Payment processing error\", error);\n            }\n            setLoading(false);\n          },\n          onError: err => {\n            setStatus(\"error\");\n            setStatusMessage(\"Payment failed. Please try again later.\");\n            console.error(\"Payment Error\", err);\n          },\n          onCancel: () => {\n            setStatus(\"error\");\n            setStatusMessage(\"Payment cancelled.\");\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), status && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `status-message status-${status}`,\n      children: statusMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(PayPalButton, \"ICzlanBVpOgJh0JfyMWMCg1a64U=\");\n_c = PayPalButton;\nexport default PayPalButton;\nvar _c;\n$RefreshReg$(_c, \"PayPalButton\");","map":{"version":3,"names":["React","useEffect","useState","PayPalScriptProvider","PayPalButtons","axios","jsxDEV","_jsxDEV","PayPalButton","price","recipeTitle","recipeId","_s","clientId","setClientId","loading","setLoading","status","setStatus","statusMessage","setStatusMessage","handleApprove","orderID","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","options","style","layout","color","shape","label","createOrder","data","post","recipe_title","error","onApprove","onError","err","onCancel","_c","$RefreshReg$"],"sources":["C:/Users/tiyas/OneDrive/Desktop/MATRIMONIAL/MATRIMONIAL/frontend/src/components/PayPalButton.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { PayPalScriptProvider, PayPalButtons } from \"@paypal/react-paypal-js\";\r\nimport axios from \"axios\";\r\nimport \"./paypalButton.css\"; // Make sure to create this CSS file with the styles above\r\n\r\nconst PayPalButton = ({ price, recipeTitle, recipeId }) => {\r\n    const [clientId, setClientId] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const [status, setStatus] = useState(null);\r\n    const [statusMessage, setStatusMessage] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        // Fetch the PayPal Client ID from the backend (Optional)\r\n        setClientId(\"YOUR_PAYPAL_CLIENT_ID\");\r\n    }, []);\r\n\r\n    const handleApprove = (orderID) => {\r\n        setStatus(\"success\");\r\n        setStatusMessage(\"Payment successful! Order ID: \" + orderID);\r\n        console.log(\"Payment Approved!\", orderID);\r\n    };\r\n\r\n    return (\r\n        <div className=\"paypal-container\">\r\n            <h3 className=\"payment-title\">Secure Checkout</h3>\r\n            \r\n            <div className=\"recipe-title\">\r\n                {recipeTitle}\r\n            </div>\r\n            \r\n            <div className=\"price-container\">\r\n                <span className=\"price-label\">Total:</span>\r\n                <span className=\"price-amount\">${price.toFixed(2)}</span>\r\n            </div>\r\n            \r\n            <div className=\"paypal-buttons-wrapper\">\r\n                {loading ? (\r\n                    <div className=\"processing\">\r\n                        <span className=\"loading-spinner\"></span>\r\n                        Processing your payment...\r\n                    </div>\r\n                ) : (\r\n                    <PayPalScriptProvider options={{ \"client-id\": clientId }}>\r\n                        <PayPalButtons\r\n                            style={{ \r\n                                layout: \"vertical\",\r\n                                color: \"blue\",\r\n                                shape: \"rect\",\r\n                                label: \"pay\"\r\n                            }}\r\n                            createOrder={async () => {\r\n                                try {\r\n                                    setLoading(true);\r\n                                    const { data } = await axios.post(`http://localhost:5000/pay/${recipeId}`, {\r\n                                        price: price,\r\n                                        recipe_title: recipeTitle,\r\n                                    });\r\n                                    setLoading(false);\r\n                                    return data.orderID;\r\n                                } catch (error) {\r\n                                    setLoading(false);\r\n                                    setStatus(\"error\");\r\n                                    setStatusMessage(\"Error creating order. Please try again.\");\r\n                                    console.error(\"Error creating order\", error);\r\n                                }\r\n                            }}\r\n                            onApprove={async (data) => {\r\n                                setLoading(true);\r\n                                try {\r\n                                    handleApprove(data.orderID);\r\n                                } catch (error) {\r\n                                    setStatus(\"error\");\r\n                                    setStatusMessage(\"Error processing payment. Please contact support.\");\r\n                                    console.error(\"Payment processing error\", error);\r\n                                }\r\n                                setLoading(false);\r\n                            }}\r\n                            onError={(err) => {\r\n                                setStatus(\"error\");\r\n                                setStatusMessage(\"Payment failed. Please try again later.\");\r\n                                console.error(\"Payment Error\", err);\r\n                            }}\r\n                            onCancel={() => {\r\n                                setStatus(\"error\");\r\n                                setStatusMessage(\"Payment cancelled.\");\r\n                            }}\r\n                        />\r\n                    </PayPalScriptProvider>\r\n                )}\r\n            </div>\r\n            \r\n            {status && (\r\n                <div className={`status-message status-${status}`}>\r\n                    {statusMessage}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PayPalButton;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}